Index: linux-3.10.0-123.el7.x86_64_patch/fs/btrfs/super.c
===================================================================
--- linux-3.10.0-123.el7.x86_64_patch.orig/fs/btrfs/super.c
+++ linux-3.10.0-123.el7.x86_64_patch/fs/btrfs/super.c
@@ -1576,6 +1576,8 @@ static int btrfs_calc_avail_data_space(s
 	return 0;
 }
 
+#define MAX_INODE_SIZE	1092
+
 static int btrfs_statfs(struct dentry *dentry, struct kstatfs *buf)
 {
 	struct btrfs_fs_info *fs_info = btrfs_sb(dentry->d_sb);
@@ -1584,6 +1586,7 @@ static int btrfs_statfs(struct dentry *d
 	struct btrfs_space_info *found;
 	u64 total_used = 0;
 	u64 total_free_data = 0;
+	u64 total_free_metadata = 0;
 	int bits = dentry->d_sb->s_blocksize_bits;
 	__be32 *fsid = (__be32 *)fs_info->fsid;
 	int ret;
@@ -1597,6 +1600,11 @@ static int btrfs_statfs(struct dentry *d
 			total_free_data -=
 				btrfs_account_ro_block_groups_free_space(found);
 		}
+		if (found->flags & BTRFS_BLOCK_GROUP_METADATA) {
+			total_free_metadata += found->disk_total - found->disk_used;
+			total_free_metadata -=
+				btrfs_account_ro_block_groups_free_space(found);
+		}
 
 		total_used += found->disk_used;
 	}
@@ -1608,12 +1616,18 @@ static int btrfs_statfs(struct dentry *d
 	buf->f_bsize = dentry->d_sb->s_blocksize;
 	buf->f_type = BTRFS_SUPER_MAGIC;
 	buf->f_bavail = total_free_data;
+	buf->f_ffree = total_free_metadata;
 	ret = btrfs_calc_avail_data_space(fs_info->tree_root, &total_free_data);
 	if (ret) {
 		mutex_unlock(&fs_info->chunk_mutex);
 		return ret;
 	}
 	buf->f_bavail += total_free_data;
+	buf->f_ffree += total_free_data;
+	if (buf->f_ffree < 40 * fs_info->fs_root->nodesize)
+		buf->f_ffree = 0;
+	else
+		buf->f_ffree /= MAX_INODE_SIZE;
 	buf->f_bavail = buf->f_bavail >> bits;
 	mutex_unlock(&fs_info->chunk_mutex);
 
